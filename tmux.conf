# Based on https://gist.github.com/rajanand02/9407361

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# helps in faster key repetition
set -sg escape-time 0

# start session number from 1 rather than 0
set -g base-index 1

# start pane number from 1 similar to windows
set-window-option -g pane-base-index 1

# Make the current window the first window
bind T swap-window -t 1

# source .tmux.conf file
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# dont mess up with other ctrl-a options by pressing ctrl-a twice
bind C-a send-prefix

# create windown with current path
bind c new-window -c '#{pane_current_path}'

# vertical split
bind \ split-window -h -c '#{pane_current_path}'

# horizontal split
bind - split-window -v -c '#{pane_current_path}'

# pane movement similar to vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# to cycle through windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind b previous-window

# Clear the screen and history for the pane
bind -n C-k send-keys -R \; clear-history

# enable mouse
setw -g mouse on

# Toggle mouse on
bind m set -g mouse on; display 'Mouse: ON'

# Toggle mouse off (Hold shift key to select the text using mouse)
bind M set -g mouse off; display 'Mouse: OFF'

# set 256 color
set -g default-terminal "xterm-256color"

# monitor activities in other windows
setw -g monitor-activity on
set -g visual-activity on

# enable vi mode
setw -g mode-keys vi

# Remap prefix to ctrl-a (or caps-a for my mac)
# set -g prefix C-a

# unbind [
# bind y copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

# # copy to system clipboard
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#
# # paste from system clipboard
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# maximizing and restoring panes
# unbind Up
# bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
# unbind Down
# bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# switch between sessions
bind -r ( switch-client -p
bind -r ) switch-client -n

# Configure your default shell, Zsh in my case.
set -g default-shell $SHELL

# Override the default command to use `reattach-to-user-namespace` for everything.
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Setup 'v' to begin selection, just like Vim
bind-key -t vi-copy v begin-selection

# Setup 'y' to yank (copy), just like Vim
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbbaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# recording  program output to a log
# bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# don't allow tmux to rename the window based on commands running
set-window-option -g allow-rename off

# set -g lock-after-time 300
# set -g lock-command "cmatrix -s"

## COLORSCHEME: gruvbox dark

set-option -g status "on"

# default statusbar colors
set-option -g status-bg colour237 #bg1
set-option -g status-fg colour223 #fg1

# default window title colors
set-window-option -g window-status-bg colour214 #yellow
set-window-option -g window-status-fg colour237 #bg1

set-window-option -g window-status-activity-bg colour237 #bg1
set-window-option -g window-status-activity-fg colour248 #fg3

# active window title colors
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-fg colour237 #bg1

# pane border
set-option -g pane-active-border-fg colour250 #fg2
set-option -g pane-border-fg colour237 #bg1

# message infos
set-option -g message-bg colour239 #bg2
set-option -g message-fg colour223 #fg1

# writting commands inactive
set-option -g message-command-bg colour239 #fg3
set-option -g message-command-fg colour223 #bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red


## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-attr "none"
set-option -g status-justify "left"
set-option -g status-left-attr "none"
set-option -g status-left-length "80"
set-option -g status-right-attr "none"
set-option -g status-right-length "80"
set-window-option -g window-status-activity-attr "none"
set-window-option -g window-status-attr "none"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248] #h "

set-window-option -g window-status-current-format "#[fg=colour239, bg=colour248, :nobold, noitalics, nounderscore]#[fg=colour239, bg=colour214] #I #[fg=colour239, bg=colour214, bold] #W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239] #I #[fg=colour223, bg=colour239] #W #[fg=colour239, bg=colour237, noitalics]"

